[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Nir <nrbnlulu@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
SQLAlchemy = {extras = ["asyncio"], version = "^2.0.20"}
fastapi = "^0.103.1"
pydantic-settings = "^2.0.3"
python-dotenv = "^1.0.0"
aiosqlite = "^0.19.0"
aioinject = "^0.13.0"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.21.1"
alembic = "^1.12.0"
black = "^23.7.0"
isort = "^5.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"




[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
select = ["ALL"]
target-version = "py38"
ignore = [
    # https://beta.ruff.rs/docs/rules/#flake8-fixme-fix
    "FIX002",
    # https://beta.ruff.rs/docs/rules/#flake8-bandit-s
    "S603",
    "S607",
    "TD002",
    "TD003",
]

fix = true
src = ["qtgqlcodegen", "tests"]

[tool.ruff.per-file-ignores]
"**/migrations/*" = ["RUF012"]
"tests/*" = ["S101", "S311", "ARG001", "ANN001", "ANN201"]

[tool.ruff.flake8-annotations]
suppress-none-returning = true

[tool.ruff.isort]
combine-as-imports = true